## This file is generated. Do not modify.

## Lexer$BEGIN

lex2pats = \
    [('NEG', '!'),
     ('CON', '&'),
     ('DIS', '\\|'),
     ('IMP', '->'),
     ('IFF', '<=>'),
     ('W', '[A-Z]\\w*'),
     ('True', None),
     ('False', None),
     ('(', None),
     (')', None),
     ('[', None),
     (']', None),
     ('IGNORED', '[ \\t\\n]'),
     ('ERROR', '.')]
lex_handler_sources = \
    {}

## Lexer$END


## Parser$BEGIN

rules = \
    [('Sentence^', ('Sentence',)),
     ('Sentence', ['Atomic']),
     ('Sentence', ['Complex']),
     ('Atomic', ['True']),
     ('Atomic', ['False']),
     ('Atomic', ['W']),
     ('Complex', ['(', 'Sentence', ')']),
     ('Complex', ['[', 'Sentence', ']']),
     ('Complex', ['NEG', 'Sentence']),
     ('Complex', ['Sentence', 'CON', 'Sentence']),
     ('Complex', ['Sentence', 'DIS', 'Sentence']),
     ('Complex', ['Sentence', 'IMP', 'Sentence']),
     ('Complex', ['Sentence', 'IFF', 'Sentence'])]

seman_sources = \
    ['def id_func(x):\n    return x\n',
     None,
     None,
     None,
     None,
     None,
     None,
     None,
     None,
     None,
     None,
     None,
     None]

Ks = \
    [[(0, 0)],
     [(0, 1), (9, 1), (10, 1), (11, 1), (12, 1)],
     [(1, 1)],
     [(2, 1)],
     [(3, 1)],
     [(4, 1)],
     [(5, 1)],
     [(6, 1)],
     [(7, 1)],
     [(8, 1)],
     [(9, 2)],
     [(10, 2)],
     [(11, 2)],
     [(12, 2)],
     [(6, 2), (9, 1), (10, 1), (11, 1), (12, 1)],
     [(7, 2), (9, 1), (10, 1), (11, 1), (12, 1)],
     [(8, 2), (9, 1), (10, 1), (11, 1), (12, 1)],
     [(9, 1), (9, 3), (10, 1), (11, 1), (12, 1)],
     [(9, 1), (10, 1), (10, 3), (11, 1), (12, 1)],
     [(9, 1), (10, 1), (11, 1), (11, 3), (12, 1)],
     [(9, 1), (10, 1), (11, 1), (12, 1), (12, 3)],
     [(6, 3)],
     [(7, 3)]]

ACTION = \
    [{'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'CON': ('SHIFT', 10),
      'DIS': ('SHIFT', 11),
      'END': ('ACCEPT', 0),
      'IFF': ('SHIFT', 13),
      'IMP': ('SHIFT', 12)},
     {')': ('REDUCE', 1),
      'CON': ('REDUCE', 1),
      'DIS': ('REDUCE', 1),
      'END': ('REDUCE', 1),
      'IFF': ('REDUCE', 1),
      'IMP': ('REDUCE', 1),
      ']': ('REDUCE', 1)},
     {')': ('REDUCE', 2),
      'CON': ('REDUCE', 2),
      'DIS': ('REDUCE', 2),
      'END': ('REDUCE', 2),
      'IFF': ('REDUCE', 2),
      'IMP': ('REDUCE', 2),
      ']': ('REDUCE', 2)},
     {')': ('REDUCE', 3),
      'CON': ('REDUCE', 3),
      'DIS': ('REDUCE', 3),
      'END': ('REDUCE', 3),
      'IFF': ('REDUCE', 3),
      'IMP': ('REDUCE', 3),
      ']': ('REDUCE', 3)},
     {')': ('REDUCE', 4),
      'CON': ('REDUCE', 4),
      'DIS': ('REDUCE', 4),
      'END': ('REDUCE', 4),
      'IFF': ('REDUCE', 4),
      'IMP': ('REDUCE', 4),
      ']': ('REDUCE', 4)},
     {')': ('REDUCE', 5),
      'CON': ('REDUCE', 5),
      'DIS': ('REDUCE', 5),
      'END': ('REDUCE', 5),
      'IFF': ('REDUCE', 5),
      'IMP': ('REDUCE', 5),
      ']': ('REDUCE', 5)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {'(': ('SHIFT', 7),
      'False': ('SHIFT', 5),
      'NEG': ('SHIFT', 9),
      'True': ('SHIFT', 4),
      'W': ('SHIFT', 6),
      '[': ('SHIFT', 8)},
     {')': ('SHIFT', 21),
      'CON': ('SHIFT', 10),
      'DIS': ('SHIFT', 11),
      'IFF': ('SHIFT', 13),
      'IMP': ('SHIFT', 12)},
     {'CON': ('SHIFT', 10),
      'DIS': ('SHIFT', 11),
      'IFF': ('SHIFT', 13),
      'IMP': ('SHIFT', 12),
      ']': ('SHIFT', 22)},
     {')': ('REDUCE', 8),
      'CON': ('REDUCE', 8),
      'DIS': ('REDUCE', 8),
      'END': ('REDUCE', 8),
      'IFF': ('REDUCE', 8),
      'IMP': ('REDUCE', 8),
      ']': ('REDUCE', 8)},
     {')': ('REDUCE', 9),
      'CON': ('REDUCE', 9),
      'DIS': ('REDUCE', 9),
      'END': ('REDUCE', 9),
      'IFF': ('REDUCE', 9),
      'IMP': ('REDUCE', 9),
      ']': ('REDUCE', 9)},
     {')': ('REDUCE', 10),
      'CON': ('SHIFT', 10),
      'DIS': ('REDUCE', 10),
      'END': ('REDUCE', 10),
      'IFF': ('REDUCE', 10),
      'IMP': ('REDUCE', 10),
      ']': ('REDUCE', 10)},
     {')': ('REDUCE', 11),
      'CON': ('SHIFT', 10),
      'DIS': ('SHIFT', 11),
      'END': ('REDUCE', 11),
      'IFF': ('REDUCE', 11),
      'IMP': ('REDUCE', 11),
      ']': ('REDUCE', 11)},
     {')': ('REDUCE', 12),
      'CON': ('SHIFT', 10),
      'DIS': ('SHIFT', 11),
      'END': ('REDUCE', 12),
      'IFF': ('REDUCE', 12),
      'IMP': ('SHIFT', 12),
      ']': ('REDUCE', 12)},
     {')': ('REDUCE', 6),
      'CON': ('REDUCE', 6),
      'DIS': ('REDUCE', 6),
      'END': ('REDUCE', 6),
      'IFF': ('REDUCE', 6),
      'IMP': ('REDUCE', 6),
      ']': ('REDUCE', 6)},
     {')': ('REDUCE', 7),
      'CON': ('REDUCE', 7),
      'DIS': ('REDUCE', 7),
      'END': ('REDUCE', 7),
      'IFF': ('REDUCE', 7),
      'IMP': ('REDUCE', 7),
      ']': ('REDUCE', 7)}]

GOTO = \
    [{'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 1,
      'True': 4,
      'W': 6,
      '[': 8},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {},
     {},
     {},
     {},
     {},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 14,
      'True': 4,
      'W': 6,
      '[': 8},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 15,
      'True': 4,
      'W': 6,
      '[': 8},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 16,
      'True': 4,
      'W': 6,
      '[': 8},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 17,
      'True': 4,
      'W': 6,
      '[': 8},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 18,
      'True': 4,
      'W': 6,
      '[': 8},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 19,
      'True': 4,
      'W': 6,
      '[': 8},
     {'(': 7,
      'Atomic': 2,
      'Complex': 3,
      'False': 5,
      'NEG': 9,
      'Sentence': 20,
      'True': 4,
      'W': 6,
      '[': 8},
     {')': 21, 'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12, ']': 22},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {'CON': 10, 'DIS': 11, 'IFF': 13, 'IMP': 12},
     {},
     {}]

## Parser$END
